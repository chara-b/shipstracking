npm install socket.io --save
npm install express --save


const express = require('express'); // using express 
const socketIO = require('socket.io'); 
const http = require('http')  
const port = process.env.PORT||3000 // setting the port  
let app = express(); 
let server = http.createServer(app) 
let io = socketIO(server) 

// make connection with user from server side 
io.on('connection', (socket)=>{ 
  console.log('New user connected'); 
   //emit message from server to user 
   socket.emit('newMessage', { 
     from:'jen@mds', 
     text:'hepppp', 
     createdAt:123 
   }); 
  
  // listen for message from user 
  socket.on('createMessage', (newMessage)=>{ 
    console.log('newMessage', newMessage); 
  }); 
  
  // when server disconnects from user 
  socket.on('disconnect', ()=>{ 
    console.log('disconnected from user'); 
  }); 
}); 
  
server.listen(port); 

--------THE CLIENT------------


<!DOCTYPE html> 
<html lang="en" dir="ltr"> 
  <head> 
    <meta charset="utf-8"> 
  
    <title>ChatApp</title> 
  </head> 
  <body class="chat"> 
        <form id='message-form'> 
          <input name='message' type="text"placeholder="Message"
                  autofocus autocomplete="off"/> 
          <button >Send</button> 
        </form> 
  
<script src="/socket.io/socket.io.js"></script> 
<script> 
var socket=io() 
  
// connection with server 
socket.on('connect', function(){ 
  console.log('Connected to Server') 
  
}); 
  
// message listener from server 
socket.on('newMessage', function(message){ 
 console.log(message); 
}); 
  
// emits message from user side 
socket.emit('createMessage', { 
  to:'john@ds', 
  text:'what kjkljd'
}); 
  
// when disconnected from server 
socket.on('disconnect', function(){ 
  console.log('Disconnect from server') 
}); 
</script> 
  </body> 
</html>